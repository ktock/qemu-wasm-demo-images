/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var Stack;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./stack-worker.js":
/*!*************************!*\
  !*** ./stack-worker.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _bjorn3_browser_wasi_shim__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bjorn3/browser_wasi_shim */ \"./node_modules/@bjorn3/browser_wasi_shim/dist/index.js\");\n/* harmony import */ var _wasi_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wasi-util */ \"./wasi-util.js\");\n\n\n\n\nonmessage = (msg) => {\n    var info = serveIfInitMsg(msg);\n    if (info == null) {\n        return;\n    }\n    var fds = [\n        undefined, // 0: stdin\n        undefined, // 1: stdout\n        undefined, // 2: stderr\n        undefined, // 3: receive certificates\n        undefined, // 4: socket listenfd\n        undefined, // 5: accepted socket fd (multi-connection is unsupported)\n        // 6...: used by wasi shim\n    ];\n    var certfd = 3;\n    var listenfd = 4;\n    var args = ['arg0', '--certfd='+certfd, '--net-listenfd='+listenfd, '--debug'];\n    var env = [];\n    var wasi = new _bjorn3_browser_wasi_shim__WEBPACK_IMPORTED_MODULE_0__.WASI(args, env, fds);\n    wasiHack(wasi, certfd, 5);\n    (0,_wasi_util__WEBPACK_IMPORTED_MODULE_1__.wasiHackSocket)(wasi, listenfd, 5, sockAccept, sockSend, sockRecv);\n    fetch(info.stackWasmURL).then((resp) => {\n        resp['blob']().then((blob) => {\n            const ds = new DecompressionStream(\"gzip\")\n            new Response(blob.stream().pipeThrough(ds))['arrayBuffer']().then((wasm) => {\n                WebAssembly.instantiate(wasm, {\n                    \"wasi_snapshot_preview1\": wasi.wasiImport,\n                    \"env\": envHack(wasi),\n                }).then((inst) => {\n                    wasi.start(inst.instance);\n                });\n\n            });\n        });\n    });\n};\n\n// definition from wasi-libc https://github.com/WebAssembly/wasi-libc/blob/wasi-sdk-19/expected/wasm32-wasi/predefined-macros.txt\nconst ERRNO_INVAL = 28;\nconst ERRNO_AGAIN= 6;\n\nfunction wasiHack(wasi, certfd, connfd) {\n    var certbuf = new Uint8Array(0);\n    var _fd_close = wasi.wasiImport.fd_close;\n    wasi.wasiImport.fd_close = (fd) => {\n        if (fd == certfd) {\n            sendCert(certbuf);\n            return 0;\n        }\n        return _fd_close.apply(wasi.wasiImport, [fd]);\n    }\n    var _fd_fdstat_get = wasi.wasiImport.fd_fdstat_get;\n    wasi.wasiImport.fd_fdstat_get = (fd, fdstat_ptr) => {\n        if (fd == certfd) {\n            return 0;\n        }\n        return _fd_fdstat_get.apply(wasi.wasiImport, [fd, fdstat_ptr]);\n    }\n    wasi.wasiImport.fd_fdstat_set_flags = (fd, fdflags) => {\n        // TODO\n        return 0;\n    }\n    var _fd_write = wasi.wasiImport.fd_write;\n    wasi.wasiImport.fd_write = (fd, iovs_ptr, iovs_len, nwritten_ptr) => {\n        if ((fd == 1) || (fd == 2) || (fd == certfd)) {\n            var buffer = new DataView(wasi.inst.exports.memory.buffer);\n            var buffer8 = new Uint8Array(wasi.inst.exports.memory.buffer);\n            var iovecs = _bjorn3_browser_wasi_shim__WEBPACK_IMPORTED_MODULE_0__.wasi.Ciovec.read_bytes_array(buffer, iovs_ptr, iovs_len);\n            var wtotal = 0\n            for (var i = 0; i < iovecs.length; i++) {\n                var iovec = iovecs[i];\n                var buf = buffer8.slice(iovec.buf, iovec.buf + iovec.buf_len);\n                if (buf.length == 0) {\n                    continue;\n                }\n                console.log(new TextDecoder().decode(buf));\n                if (fd == certfd) {\n                    certbuf = appendData(certbuf, buf);\n                }\n                wtotal += buf.length;\n            }\n            buffer.setUint32(nwritten_ptr, wtotal, true);\n            return 0;\n        }\n        console.log(\"fd_write: unknown fd \" + fd);\n        return _fd_write.apply(wasi.wasiImport, [fd, iovs_ptr, iovs_len, nwritten_ptr]);\n    }\n    wasi.wasiImport.poll_oneoff = (in_ptr, out_ptr, nsubscriptions, nevents_ptr) => {\n        if (nsubscriptions == 0) {\n            return ERRNO_INVAL;\n        }\n        let buffer = new DataView(wasi.inst.exports.memory.buffer);\n        let in_ = _wasi_util__WEBPACK_IMPORTED_MODULE_1__.Subscription.read_bytes_array(buffer, in_ptr, nsubscriptions);\n        let isReadPollStdin = false;\n        let isReadPollConn = false;\n        let isClockPoll = false;\n        let pollSubStdin;\n        let pollSubConn;\n        let clockSub;\n        let timeout = Number.MAX_VALUE;\n        for (let sub of in_) {\n            if (sub.u.tag.variant == \"fd_read\") {\n                if ((sub.u.data.fd != 0) && (sub.u.data.fd != connfd)) {\n                    return ERRNO_INVAL; // only fd=0 and connfd is supported as of now (FIXME)\n                }\n                if (sub.u.data.fd == 0) {\n                    isReadPollStdin = true;\n                    pollSubStdin = sub;\n                } else {\n                    isReadPollConn = true;\n                    pollSubConn = sub;\n                }\n            } else if (sub.u.tag.variant == \"clock\") {\n                if (sub.u.data.timeout < timeout) {\n                    timeout = sub.u.data.timeout\n                    isClockPoll = true;\n                    clockSub = sub;\n                }\n            } else {\n                return ERRNO_INVAL; // FIXME\n            }\n        }\n        if (!isClockPoll) {\n            timeout = 0;\n        }\n        let events = [];\n        if (isReadPollStdin || isReadPollConn || isClockPoll) {\n            var sockreadable = sockWaitForReadable(timeout / 1000000000);\n            if (isReadPollConn) {\n                if (sockreadable == errStatus) {\n                    return ERRNO_INVAL;\n                } else if (sockreadable == true) {\n                    let event = new _wasi_util__WEBPACK_IMPORTED_MODULE_1__.Event();\n                    event.userdata = pollSubConn.userdata;\n                    event.error = 0;\n                    event.type = new _wasi_util__WEBPACK_IMPORTED_MODULE_1__.EventType(\"fd_read\");\n                    events.push(event);\n                }\n            }\n            if (isClockPoll) {\n                let event = new _wasi_util__WEBPACK_IMPORTED_MODULE_1__.Event();\n                event.userdata = clockSub.userdata;\n                event.error = 0;\n                event.type = new _wasi_util__WEBPACK_IMPORTED_MODULE_1__.EventType(\"clock\");\n                events.push(event);\n            }\n        }\n        var len = events.length;\n        _wasi_util__WEBPACK_IMPORTED_MODULE_1__.Event.write_bytes_array(buffer, out_ptr, events);\n        buffer.setUint32(nevents_ptr, len, true);\n        return 0;\n    }\n}\n\nfunction envHack(wasi){\n    return {\n        http_send: function(addressP, addresslen, reqP, reqlen, idP){\n            var buffer = new DataView(wasi.inst.exports.memory.buffer);\n            var address = new Uint8Array(wasi.inst.exports.memory.buffer, addressP, addresslen);\n            var req = new Uint8Array(wasi.inst.exports.memory.buffer, reqP, reqlen);\n            streamCtrl[0] = 0;\n            postMessage({\n                type: \"http_send\",\n                address: address.slice(0, address.length),\n                req: req.slice(0, req.length),\n            });\n            Atomics.wait(streamCtrl, 0, 0);\n            if (streamStatus[0] < 0) {\n                return ERRNO_INVAL;\n            }\n            var id = streamStatus[0];\n            buffer.setUint32(idP, id, true);\n            return 0;\n        },\n        http_writebody: function(id, bodyP, bodylen, nwrittenP, isEOF){\n            var buffer = new DataView(wasi.inst.exports.memory.buffer);\n            var body = new Uint8Array(wasi.inst.exports.memory.buffer, bodyP, bodylen);\n            streamCtrl[0] = 0;\n            postMessage({\n                type: \"http_writebody\",\n                id: id,\n                body: body.slice(0, body.length),\n                isEOF: isEOF,\n            });\n            Atomics.wait(streamCtrl, 0, 0);\n            if (streamStatus[0] < 0) {\n                return ERRNO_INVAL;\n            }\n            buffer.setUint32(nwrittenP, bodylen, true);\n            return 0;\n        },\n        http_isreadable: function(id, isOKP){\n            var buffer = new DataView(wasi.inst.exports.memory.buffer);\n            streamCtrl[0] = 0;\n            postMessage({type: \"http_isreadable\", id: id});\n            Atomics.wait(streamCtrl, 0, 0);\n            if (streamStatus[0] < 0) {\n                return ERRNO_INVAL;\n            }\n            var readable = 0;\n            if (streamData[0] == 1) {\n                readable = 1;\n            }\n            buffer.setUint32(isOKP, readable, true);\n            return 0;\n        },\n        http_recv: function(id, respP, bufsize, respsizeP, isEOFP){\n            var buffer = new DataView(wasi.inst.exports.memory.buffer);\n            var buffer8 = new Uint8Array(wasi.inst.exports.memory.buffer);\n\n            streamCtrl[0] = 0;\n            postMessage({type: \"http_recv\", id: id, len: bufsize});\n            Atomics.wait(streamCtrl, 0, 0);\n            if (streamStatus[0] < 0) {\n                return ERRNO_INVAL;\n            }\n            var ddlen = streamLen[0];\n            var resp = streamData.subarray(0, ddlen);\n            buffer8.set(resp, respP);\n            buffer.setUint32(respsizeP, ddlen, true);\n            if (streamStatus[0] == 1) {\n                buffer.setUint32(isEOFP, 1, true);\n            } else {\n                buffer.setUint32(isEOFP, 0, true);\n            }\n            return 0;\n        },\n        http_readbody: function(id, bodyP, bufsize, bodysizeP, isEOFP){\n            var buffer = new DataView(wasi.inst.exports.memory.buffer);\n            var buffer8 = new Uint8Array(wasi.inst.exports.memory.buffer);\n\n            streamCtrl[0] = 0;\n            postMessage({type: \"http_readbody\", id: id, len: bufsize});\n            Atomics.wait(streamCtrl, 0, 0);\n            if (streamStatus[0] < 0) {\n                return ERRNO_INVAL;\n            }\n            var ddlen = streamLen[0];\n            var body = streamData.subarray(0, ddlen);\n            buffer8.set(body, bodyP);\n            buffer.setUint32(bodysizeP, ddlen, true);\n            if (streamStatus[0] == 1) {\n                buffer.setUint32(isEOFP, 1, true);\n            } else {\n                buffer.setUint32(isEOFP, 0, true);\n            }\n            return 0;\n        },\n    };\n}\n\nvar streamCtrl;\nvar streamStatus;\nvar streamLen;\nvar streamData;\nfunction registerSocketBuffer(shared){\n    streamCtrl = new Int32Array(shared, 0, 1);\n    streamStatus = new Int32Array(shared, 4, 1);\n    streamLen = new Int32Array(shared, 8, 1);\n    streamData = new Uint8Array(shared, 12);\n}\n\nvar toNetCtrl;\nvar toNetBegin;\nvar toNetEnd;\nvar toNetNotify;\nvar toNetData;\nvar fromNetCtrl;\nvar fromNetBegin;\nvar fromNetEnd;\nvar fromNetData;\nfunction registerConnBuffer(to, from) {\n    toNetCtrl = new Int32Array(to, 0, 1);\n    toNetBegin = new Int32Array(to, 4, 1);\n    toNetEnd = new Int32Array(to, 8, 1);\n    toNetNotify = new Int32Array(to, 12, 1);\n    toNetData = new Uint8Array(to, 16);\n    fromNetCtrl = new Int32Array(from, 0, 1);\n    fromNetBegin = new Int32Array(from, 4, 1);\n    fromNetEnd = new Int32Array(from, 8, 1);\n    fromNetData = new Uint8Array(from, 12);\n}\n\nvar metaFromNetCtrl;\nvar metaFromNetBegin;\nvar metaFromNetEnd;\nvar metaFromNetStatus;\nvar metaFromNetData;\nfunction registerMetaBuffer(meta) {\n    metaFromNetCtrl = new Int32Array(meta, 0, 1);\n    metaFromNetBegin = new Int32Array(meta, 4, 1);\n    metaFromNetEnd = new Int32Array(meta, 8, 1);\n    metaFromNetStatus = new Int32Array(meta, 12, 1);\n    metaFromNetData = new Uint8Array(meta, 16);\n}\n\nfunction serveIfInitMsg(msg) {\n    const req_ = msg.data;\n    if (typeof req_ == \"object\"){\n        if (req_.type == \"init\") {\n            if (req_.buf) {\n                var shared = req_.buf;\n                registerSocketBuffer(shared);\n                registerConnBuffer(req_.toBuf, req_.fromBuf);\n                registerMetaBuffer(req_.metaFromBuf);\n            }\n            return {\n                stackWasmURL: req_.stackWasmURL\n            };\n        }\n    }\n\n    return null;\n}\n\nconst errStatus = {\n    val: 0,\n};\n\nvar accepted = false;\nfunction sockAccept(){\n    accepted = true;\n    return true;\n}\n\nfunction sockSend(data){\n    if (!accepted) {\n        return -1;\n    }\n\n    for(;;) {\n        if (Atomics.compareExchange(fromNetCtrl, 0, 0, 1) == 0) {\n            break;\n        }\n        Atomics.wait(fromNetCtrl, 0, 1);\n    }\n    let begin = fromNetBegin[0]; //inclusive\n    let end = fromNetEnd[0]; //exclusive\n    var len;\n    var round;\n    if (end >= begin) {\n        len = fromNetData.byteLength - end;\n        round = begin;\n    } else {\n        len = begin - end;\n        round = 0;\n    }\n    if ((len + round) < data.length) {\n        // buffer is full; drop packets\n        // TODO: preserve this\n        console.log(\"FIXME: buffer full; dropping packets\");\n    } else {\n        if (len > 0) {\n            if (len > data.length) {\n                len = data.length\n            }\n            fromNetData.set(data.subarray(0, len), end);\n            fromNetEnd[0] = end + len;\n        }\n        if ((round > 0) && (data.length > len)) {\n            if (round > data.length - len) {\n                round = data.length - len\n            }\n            fromNetData.set(data.subarray(len, len + round), 0);\n            fromNetEnd[0] = round;\n        }\n    }\n    if (Atomics.compareExchange(fromNetCtrl, 0, 1, 0) != 1) {\n        console.log(\"UNEXPECTED STATUS\");\n    }\n    Atomics.notify(fromNetCtrl, 0, 1);\n\n    // notify data is sent from stack\n    streamCtrl[0] = 0;\n    postMessage({type: \"notify-send-from-net\", len: data.length});\n    Atomics.wait(streamCtrl, 0, 0);\n\n    return 0;\n}\n\nfunction sockRecv(targetBuf, targetOffset, targetLen){\n    if (!accepted) {\n        return -1;\n    }\n\n    for(;;) {\n        if (Atomics.compareExchange(toNetCtrl, 0, 0, 1) == 0) {\n            break;\n        }\n        Atomics.wait(toNetCtrl, 0, 1);\n    }\n    let begin = toNetBegin[0]; //inclusive\n    let end = toNetEnd[0]; //exclusive\n    var len;\n    var round;\n    if (end >= begin) {\n        len = end - begin;\n        round = 0;\n    } else {\n        len = toNetData.byteLength - begin;\n        round = end;\n    }\n    if (targetLen < len) {\n        len = targetLen;\n        round = 0;\n    } else if (targetLen < len + round) {\n        round = targetLen - len;\n    }\n    if (len > 0) {\n        targetBuf.set(toNetData.subarray(begin, begin + len), targetOffset);\n        toNetBegin[0] = begin + len;\n    }\n    if (round > 0) {\n        targetBuf.set(toNetData.subarray(0, round), targetOffset + len);\n        toNetBegin[0] = round;\n    }\n    if (Atomics.compareExchange(toNetCtrl, 0, 1, 0) != 1) {\n        console.log(\"UNEXPECTED STATUS\");\n    }\n    Atomics.notify(toNetCtrl, 0, 1);\n\n    return (len + round);\n}\n\nfunction sockWaitForReadable(timeout){\n    if (!accepted) {\n        errStatus.val = -1;\n        return errStatus;\n    }\n\n    for(;;) {\n        if (Atomics.compareExchange(toNetCtrl, 0, 0, 1) == 0) {\n            break;\n        }\n        Atomics.wait(toNetCtrl, 0, 1);\n    }\n    let begin = toNetBegin[0]; //inclusive\n    let end = toNetEnd[0]; //exclusive\n    var len;\n    var round;\n    if (end >= begin) {\n        len = end - begin;\n        round = 0;\n    } else {\n        len = toNetData.byteLength - begin;\n        round = end;\n    }\n    var ready;\n    if ((len + round) > 0) {\n        ready = true;\n    } else {\n        ready = false;\n    }\n    if (Atomics.compareExchange(toNetCtrl, 0, 1, 0) != 1) {\n        console.log(\"UNEXPECTED STATUS\");\n    }\n    Atomics.notify(toNetCtrl, 0, 1);\n\n    if (ready) {\n        return true;\n    } else if (timeout == 0) {\n        return false;\n    }\n\n    // buffer not ready; wait for readable.\n    streamCtrl[0] = 0;\n    Atomics.store(toNetNotify, 0, 0);\n    postMessage({type: \"recv-is-readable\", timeout: timeout});\n    Atomics.wait(streamCtrl, 0, 0);\n    Atomics.wait(toNetNotify, 0, 0);\n    var res = Atomics.load(toNetNotify, 0);\n\n    streamCtrl[0] = 0;\n    postMessage({type: \"recv-is-readable-cancel\"});\n    Atomics.wait(streamCtrl, 0, 0);\n\n    Atomics.store(toNetNotify, 0, 0);\n    return res == 1;\n}\n\nfunction sendCert(data){\n    streamCtrl[0] = 0;\n    postMessage({type: \"send_cert\", buf: data});\n    Atomics.wait(streamCtrl, 0, 0);\n    if (streamStatus[0] < 0) {\n        errStatus.val = streamStatus[0]\n        return errStatus;\n    }\n}\n\nfunction appendData(data1, data2) {\n    let buf2 = new Uint8Array(data1.byteLength + data2.byteLength);\n    buf2.set(new Uint8Array(data1), 0);\n    buf2.set(new Uint8Array(data2), data1.byteLength);\n    return buf2;\n}\n\n\n//# sourceURL=webpack://Stack/./stack-worker.js?");

/***/ }),

/***/ "./wasi-util.js":
/*!**********************!*\
  !*** ./wasi-util.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Event: () => (/* binding */ Event),\n/* harmony export */   EventType: () => (/* binding */ EventType),\n/* harmony export */   Subscription: () => (/* binding */ Subscription),\n/* harmony export */   SubscriptionClock: () => (/* binding */ SubscriptionClock),\n/* harmony export */   SubscriptionFdReadWrite: () => (/* binding */ SubscriptionFdReadWrite),\n/* harmony export */   SubscriptionU: () => (/* binding */ SubscriptionU),\n/* harmony export */   wasiHackSocket: () => (/* binding */ wasiHackSocket)\n/* harmony export */ });\n/* harmony import */ var _bjorn3_browser_wasi_shim__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bjorn3/browser_wasi_shim */ \"./node_modules/@bjorn3/browser_wasi_shim/dist/index.js\");\n\n\n////////////////////////////////////////////////////////////\n//\n// event-related classes adopted from the on-going discussion\n// towards poll_oneoff support in browser_wasi_sim project.\n// Ref: https://github.com/bjorn3/browser_wasi_shim/issues/14#issuecomment-1450351935\n//\n////////////////////////////////////////////////////////////\n\nclass EventType {\n    /*:: variant: \"clock\" | \"fd_read\" | \"fd_write\"*/\n\n    constructor(variant/*: \"clock\" | \"fd_read\" | \"fd_write\"*/) {\n        this.variant = variant;\n    }\n\n    static from_u8(data/*: number*/)/*: EventType*/ {\n        switch (data) {\n        case _bjorn3_browser_wasi_shim__WEBPACK_IMPORTED_MODULE_0__.wasi.EVENTTYPE_CLOCK:\n            return new EventType(\"clock\");\n        case _bjorn3_browser_wasi_shim__WEBPACK_IMPORTED_MODULE_0__.wasi.EVENTTYPE_FD_READ:\n            return new EventType(\"fd_read\");\n        case _bjorn3_browser_wasi_shim__WEBPACK_IMPORTED_MODULE_0__.wasi.EVENTTYPE_FD_WRITE:\n            return new EventType(\"fd_write\");\n        default:\n            throw \"Invalid event type \" + String(data);\n        }\n    }\n\n    to_u8()/*: number*/ {\n        switch (this.variant) {\n        case \"clock\":\n            return _bjorn3_browser_wasi_shim__WEBPACK_IMPORTED_MODULE_0__.wasi.EVENTTYPE_CLOCK;\n        case \"fd_read\":\n            return _bjorn3_browser_wasi_shim__WEBPACK_IMPORTED_MODULE_0__.wasi.EVENTTYPE_FD_READ;\n        case \"fd_write\":\n            return _bjorn3_browser_wasi_shim__WEBPACK_IMPORTED_MODULE_0__.wasi.EVENTTYPE_FD_WRITE;\n        default:\n            throw \"unreachable\";\n        }\n    }\n}\n\nclass Event {\n    /*:: userdata: UserData*/\n    /*:: error: number*/\n    /*:: type: EventType*/\n    /*:: fd_readwrite: EventFdReadWrite | null*/\n\n    write_bytes(view/*: DataView*/, ptr/*: number*/) {\n        view.setBigUint64(ptr, this.userdata, true);\n        view.setUint8(ptr + 8, this.error);\n        view.setUint8(ptr + 9, 0);\n        view.setUint8(ptr + 10, this.type.to_u8());\n        // if (this.fd_readwrite) {\n        //     this.fd_readwrite.write_bytes(view, ptr + 16);\n        // }\n    }\n\n    static write_bytes_array(view/*: DataView*/, ptr/*: number*/, events/*: Array<Event>*/) {\n        for (let i = 0; i < events.length; i++) {\n            events[i].write_bytes(view, ptr + 32 * i);\n        }\n    }\n}\n\nclass SubscriptionClock {\n    /*:: timeout: number*/\n\n    static read_bytes(view/*: DataView*/, ptr/*: number*/)/*: SubscriptionFdReadWrite*/ {\n        let self = new SubscriptionClock();\n        self.timeout = Number(view.getBigUint64(ptr + 8, true));\n        return self;\n    }\n}\n\nclass SubscriptionFdReadWrite {\n    /*:: fd: number*/\n\n    static read_bytes(view/*: DataView*/, ptr/*: number*/)/*: SubscriptionFdReadWrite*/ {\n        let self = new SubscriptionFdReadWrite();\n        self.fd = view.getUint32(ptr, true);\n        return self;\n    }\n}\n\nclass SubscriptionU {\n    /*:: tag: EventType */\n    /*:: data: SubscriptionClock | SubscriptionFdReadWrite */\n\n    static read_bytes(view/*: DataView*/, ptr/*: number*/)/*: SubscriptionU*/ {\n        let self = new SubscriptionU();\n        self.tag = EventType.from_u8(view.getUint8(ptr));\n        switch (self.tag.variant) {\n        case \"clock\":\n            self.data = SubscriptionClock.read_bytes(view, ptr + 8);\n            break;\n        case \"fd_read\":\n        case \"fd_write\":\n            self.data = SubscriptionFdReadWrite.read_bytes(view, ptr + 8);\n            break;\n        default:\n            throw \"unreachable\";\n        }\n        return self;\n    }\n}\n\nclass Subscription {\n    /*:: userdata: UserData */\n    /*:: u: SubscriptionU */\n\n    static read_bytes(view/*: DataView*/, ptr/*: number*/)/*: Subscription*/ {\n        let subscription = new Subscription();\n        subscription.userdata = view.getBigUint64(ptr, true);\n        subscription.u = SubscriptionU.read_bytes(view, ptr + 8);\n        return subscription;\n    }\n\n    static read_bytes_array(view/*: DataView*/, ptr/*: number*/, len/*: number*/)/*: Array<Subscription>*/ {\n        let subscriptions = [];\n        for (let i = 0; i < len; i++) {\n            subscriptions.push(Subscription.read_bytes(view, ptr + 48 * i));\n        }\n        return subscriptions;\n    }\n}\n\nfunction wasiHackSocket(wasi, listenfd, connfd, sockAccept, sockSend, sockRecv) {\n    // definition from wasi-libc https://github.com/WebAssembly/wasi-libc/blob/wasi-sdk-19/expected/wasm32-wasi/predefined-macros.txt\n    const ERRNO_INVAL = 28;\n    const ERRNO_AGAIN= 6;\n    var connfdUsed = false;\n    var connbuf = new Uint8Array(0);\n    var _fd_close = wasi.wasiImport.fd_close;\n    wasi.wasiImport.fd_close = (fd) => {\n        if (fd == connfd) {\n            connfdUsed = false;\n            return 0;\n        }\n        return _fd_close.apply(wasi.wasiImport, [fd]);\n    }\n    var _fd_read = wasi.wasiImport.fd_read;\n    wasi.wasiImport.fd_read = (fd, iovs_ptr, iovs_len, nread_ptr) => {\n        if (fd == connfd) {\n            return wasi.wasiImport.sock_recv(fd, iovs_ptr, iovs_len, 0, nread_ptr, 0);\n        }\n        return _fd_read.apply(wasi.wasiImport, [fd, iovs_ptr, iovs_len, nread_ptr]);\n    }\n    var _fd_write = wasi.wasiImport.fd_write;\n    wasi.wasiImport.fd_write = (fd, iovs_ptr, iovs_len, nwritten_ptr) => {\n        if (fd == connfd) {\n            return wasi.wasiImport.sock_send(fd, iovs_ptr, iovs_len, 0, nwritten_ptr);\n        }\n        return _fd_write.apply(wasi.wasiImport, [fd, iovs_ptr, iovs_len, nwritten_ptr]);\n    }\n    var _fd_fdstat_get = wasi.wasiImport.fd_fdstat_get;\n    wasi.wasiImport.fd_fdstat_get = (fd, fdstat_ptr) => {\n        if ((fd == listenfd) || (fd == connfd) && connfdUsed){\n            let buffer = new DataView(wasi.inst.exports.memory.buffer);\n            // https://github.com/WebAssembly/WASI/blob/snapshot-01/phases/snapshot/docs.md#-fdstat-struct\n            buffer.setUint8(fdstat_ptr, 6); // filetype = 6 (socket_stream)\n            buffer.setUint8(fdstat_ptr + 1, 2); // fdflags = 2 (nonblock)\n            return 0;\n        }\n        return _fd_fdstat_get.apply(wasi.wasiImport, [fd, fdstat_ptr]);\n    }\n    var _fd_prestat_get = wasi.wasiImport.fd_prestat_get;\n    wasi.wasiImport.fd_prestat_get = (fd, prestat_ptr) => {\n        if ((fd == listenfd) || (fd == connfd)){ // reserve socket-related fds\n            let buffer = new DataView(wasi.inst.exports.memory.buffer);\n            buffer.setUint8(prestat_ptr, 1);\n            return 0;\n        }\n        return _fd_prestat_get.apply(wasi.wasiImport, [fd, prestat_ptr]);\n    }\n    wasi.wasiImport.sock_accept = (fd, flags, fd_ptr) => {\n        if (fd != listenfd) {\n            console.log(\"sock_accept: unknown fd \" + fd);\n            return ERRNO_INVAL;\n        }\n        if (connfdUsed) {\n            console.log(\"sock_accept: multi-connection is unsupported\");\n            return ERRNO_INVAL;\n        }\n        if (!sockAccept()) {\n            return ERRNO_AGAIN;\n        }\n        connfdUsed = true;\n        var buffer = new DataView(wasi.inst.exports.memory.buffer);\n        buffer.setUint32(fd_ptr, connfd, true);\n        return 0;\n    }\n    wasi.wasiImport.sock_send = (fd, iovs_ptr, iovs_len, si_flags/*not defined*/, nwritten_ptr) => {\n        if (fd != connfd) {\n            console.log(\"sock_send: unknown fd \" + fd);\n            return ERRNO_INVAL;\n        }\n        var buffer = new DataView(wasi.inst.exports.memory.buffer);\n        var buffer8 = new Uint8Array(wasi.inst.exports.memory.buffer);\n        var iovecs = _bjorn3_browser_wasi_shim__WEBPACK_IMPORTED_MODULE_0__.wasi.Ciovec.read_bytes_array(buffer, iovs_ptr, iovs_len);\n        var wtotal = 0\n        for (var i = 0; i < iovecs.length; i++) {\n            var iovec = iovecs[i];\n            if (iovec.buf_len == 0) {\n                continue;\n            }\n            var ret = sockSend(buffer8.subarray(iovec.buf, iovec.buf + iovec.buf_len));\n            if (ret < 0) {\n                return ERRNO_INVAL;\n            }\n            wtotal += iovec.buf_len;\n        }\n        buffer.setUint32(nwritten_ptr, wtotal, true);\n        return 0;\n    }\n    wasi.wasiImport.sock_recv = (fd, iovs_ptr, iovs_len, ri_flags, nread_ptr, ro_flags_ptr) => {\n        if (ri_flags != 0) {\n            console.log(\"ri_flags are unsupported\"); // TODO\n        }\n        if (fd != connfd) {\n            console.log(\"sock_recv: unknown fd \" + fd);\n            return ERRNO_INVAL;\n        }\n        var buffer = new DataView(wasi.inst.exports.memory.buffer);\n        var buffer8 = new Uint8Array(wasi.inst.exports.memory.buffer);\n        var iovecs = _bjorn3_browser_wasi_shim__WEBPACK_IMPORTED_MODULE_0__.wasi.Iovec.read_bytes_array(buffer, iovs_ptr, iovs_len);\n        var nread = 0;\n        for (var i = 0; i < iovecs.length; i++) {\n            var iovec = iovecs[i];\n            if (iovec.buf_len == 0) {\n                continue;\n            }\n            var retlen = sockRecv(buffer8, iovec.buf, iovec.buf_len);\n            if ((retlen <= 0) && (i == 0)) {\n                return ERRNO_AGAIN;\n            }\n            nread += retlen;\n        }\n        buffer.setUint32(nread_ptr, nread, true);\n        // TODO: support ro_flags_ptr\n        return 0;\n    }\n    wasi.wasiImport.sock_shutdown = (fd, sdflags) => {\n        if (fd == connfd) {\n            connfdUsed = false;\n        }\n        return 0;\n    }\n}\n\n\n//# sourceURL=webpack://Stack/./wasi-util.js?");

/***/ }),

/***/ "./node_modules/@bjorn3/browser_wasi_shim/dist/debug.js":
/*!**************************************************************!*\
  !*** ./node_modules/@bjorn3/browser_wasi_shim/dist/debug.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   debug: () => (/* binding */ debug)\n/* harmony export */ });\nlet Debug=class Debug{enable(enabled){this.log=createLogger(enabled===undefined?true:enabled,this.prefix)}get enabled(){return this.isEnabled}constructor(isEnabled){this.isEnabled=isEnabled;this.prefix=\"wasi:\";this.enable(isEnabled)}};function createLogger(enabled,prefix){if(enabled){const a=console.log.bind(console,\"%c%s\",\"color: #265BA0\",prefix);return a}else{return()=>{}}}const debug=new Debug(false);\n\n//# sourceURL=webpack://Stack/./node_modules/@bjorn3/browser_wasi_shim/dist/debug.js?");

/***/ }),

/***/ "./node_modules/@bjorn3/browser_wasi_shim/dist/fd.js":
/*!***********************************************************!*\
  !*** ./node_modules/@bjorn3/browser_wasi_shim/dist/fd.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Fd: () => (/* binding */ Fd)\n/* harmony export */ });\n/* harmony import */ var _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wasi_defs.js */ \"./node_modules/@bjorn3/browser_wasi_shim/dist/wasi_defs.js\");\nclass Fd{fd_advise(offset,len,advice){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_SUCCESS}fd_allocate(offset,len){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP}fd_close(){return 0}fd_datasync(){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP}fd_fdstat_get(){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP,fdstat:null}}fd_fdstat_set_flags(flags){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP}fd_fdstat_set_rights(fs_rights_base,fs_rights_inheriting){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP}fd_filestat_get(){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP,filestat:null}}fd_filestat_set_size(size){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP}fd_filestat_set_times(atim,mtim,fst_flags){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP}fd_pread(view8,iovs,offset){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP,nread:0}}fd_prestat_get(){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP,prestat:null}}fd_prestat_dir_name(){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP,prestat_dir_name:null}}fd_pwrite(view8,iovs,offset){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP,nwritten:0}}fd_read(view8,iovs){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP,nread:0}}fd_readdir_single(cookie){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP,dirent:null}}fd_seek(offset,whence){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP,offset:0n}}fd_sync(){return 0}fd_tell(){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP,offset:0n}}fd_write(view8,iovs){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP,nwritten:0}}path_create_directory(path){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP}path_filestat_get(flags,path){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP,filestat:null}}path_filestat_set_times(flags,path,atim,mtim,fst_flags){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP}path_link(old_fd,old_flags,old_path,new_path){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP}path_open(dirflags,path,oflags,fs_rights_base,fs_rights_inheriting,fd_flags){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP,fd_obj:null}}path_readlink(path){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP,data:null}}path_remove_directory(path){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP}path_rename(old_path,new_fd,new_path){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP}path_symlink(old_path,new_path){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP}path_unlink_file(path){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOTSUP}}\n\n//# sourceURL=webpack://Stack/./node_modules/@bjorn3/browser_wasi_shim/dist/fd.js?");

/***/ }),

/***/ "./node_modules/@bjorn3/browser_wasi_shim/dist/fs_core.js":
/*!****************************************************************!*\
  !*** ./node_modules/@bjorn3/browser_wasi_shim/dist/fs_core.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConsoleStdout: () => (/* binding */ ConsoleStdout),\n/* harmony export */   Directory: () => (/* binding */ Directory),\n/* harmony export */   File: () => (/* binding */ File),\n/* harmony export */   OpenDirectory: () => (/* binding */ OpenDirectory),\n/* harmony export */   OpenFile: () => (/* binding */ OpenFile),\n/* harmony export */   OpenSyncOPFSFile: () => (/* binding */ OpenSyncOPFSFile),\n/* harmony export */   PreopenDirectory: () => (/* binding */ PreopenDirectory),\n/* harmony export */   SyncOPFSFile: () => (/* binding */ SyncOPFSFile)\n/* harmony export */ });\n/* harmony import */ var _debug_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debug.js */ \"./node_modules/@bjorn3/browser_wasi_shim/dist/debug.js\");\n/* harmony import */ var _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wasi_defs.js */ \"./node_modules/@bjorn3/browser_wasi_shim/dist/wasi_defs.js\");\n/* harmony import */ var _fd_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fd.js */ \"./node_modules/@bjorn3/browser_wasi_shim/dist/fd.js\");\nclass OpenFile extends _fd_js__WEBPACK_IMPORTED_MODULE_2__.Fd{fd_allocate(offset,len){if(this.file.size>offset+len){}else{const new_data=new Uint8Array(Number(offset+len));new_data.set(this.file.data,0);this.file.data=new_data}return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_SUCCESS}fd_fdstat_get(){return{ret:0,fdstat:new _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.Fdstat(_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.FILETYPE_REGULAR_FILE,0)}}fd_filestat_set_size(size){if(this.file.size>size){this.file.data=new Uint8Array(this.file.data.buffer.slice(0,Number(size)))}else{const new_data=new Uint8Array(Number(size));new_data.set(this.file.data,0);this.file.data=new_data}return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_SUCCESS}fd_read(view8,iovs){let nread=0;for(const iovec of iovs){if(this.file_pos<this.file.data.byteLength){const slice=this.file.data.slice(Number(this.file_pos),Number(this.file_pos+BigInt(iovec.buf_len)));view8.set(slice,iovec.buf);this.file_pos+=BigInt(slice.length);nread+=slice.length}else{break}}return{ret:0,nread}}fd_pread(view8,iovs,offset){let nread=0;for(const iovec of iovs){if(offset<this.file.data.byteLength){const slice=this.file.data.slice(Number(offset),Number(offset+BigInt(iovec.buf_len)));view8.set(slice,iovec.buf);offset+=BigInt(slice.length);nread+=slice.length}else{break}}return{ret:0,nread}}fd_seek(offset,whence){let calculated_offset;switch(whence){case _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.WHENCE_SET:calculated_offset=offset;break;case _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.WHENCE_CUR:calculated_offset=this.file_pos+offset;break;case _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.WHENCE_END:calculated_offset=BigInt(this.file.data.byteLength)+offset;break;default:return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_INVAL,offset:0n}}if(calculated_offset<0){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_INVAL,offset:0n}}this.file_pos=calculated_offset;return{ret:0,offset:this.file_pos}}fd_tell(){return{ret:0,offset:this.file_pos}}fd_write(view8,iovs){let nwritten=0;if(this.file.readonly)return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_BADF,nwritten};for(const iovec of iovs){const buffer=view8.slice(iovec.buf,iovec.buf+iovec.buf_len);if(this.file_pos+BigInt(buffer.byteLength)>this.file.size){const old=this.file.data;this.file.data=new Uint8Array(Number(this.file_pos+BigInt(buffer.byteLength)));this.file.data.set(old)}this.file.data.set(buffer.slice(0,Number(this.file.size-this.file_pos)),Number(this.file_pos));this.file_pos+=BigInt(buffer.byteLength);nwritten+=iovec.buf_len}return{ret:0,nwritten}}fd_pwrite(view8,iovs,offset){let nwritten=0;if(this.file.readonly)return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_BADF,nwritten};for(const iovec of iovs){const buffer=view8.slice(iovec.buf,iovec.buf+iovec.buf_len);if(offset+BigInt(buffer.byteLength)>this.file.size){const old=this.file.data;this.file.data=new Uint8Array(Number(offset+BigInt(buffer.byteLength)));this.file.data.set(old)}this.file.data.set(buffer.slice(0,Number(this.file.size-offset)),Number(offset));offset+=BigInt(buffer.byteLength);nwritten+=iovec.buf_len}return{ret:0,nwritten}}fd_filestat_get(){return{ret:0,filestat:this.file.stat()}}constructor(file){super();this.file_pos=0n;this.file=file}}class OpenSyncOPFSFile extends _fd_js__WEBPACK_IMPORTED_MODULE_2__.Fd{fd_allocate(offset,len){if(BigInt(this.file.handle.getSize())>offset+len){}else{this.file.handle.truncate(Number(offset+len))}return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_SUCCESS}fd_fdstat_get(){return{ret:0,fdstat:new _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.Fdstat(_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.FILETYPE_REGULAR_FILE,0)}}fd_filestat_get(){return{ret:0,filestat:new _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.Filestat(_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.FILETYPE_REGULAR_FILE,BigInt(this.file.handle.getSize()))}}fd_filestat_set_size(size){this.file.handle.truncate(Number(size));return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_SUCCESS}fd_read(view8,iovs){let nread=0;for(const iovec of iovs){if(this.position<this.file.handle.getSize()){const buf=new Uint8Array(view8.buffer,iovec.buf,iovec.buf_len);const n=this.file.handle.read(buf,{at:Number(this.position)});this.position+=BigInt(n);nread+=n}else{break}}return{ret:0,nread}}fd_seek(offset,whence){let calculated_offset;switch(whence){case _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.WHENCE_SET:calculated_offset=BigInt(offset);break;case _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.WHENCE_CUR:calculated_offset=this.position+BigInt(offset);break;case _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.WHENCE_END:calculated_offset=BigInt(this.file.handle.getSize())+BigInt(offset);break;default:return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_INVAL,offset:0n}}if(calculated_offset<0){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_INVAL,offset:0n}}this.position=calculated_offset;return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_SUCCESS,offset:this.position}}fd_write(view8,iovs){let nwritten=0;if(this.file.readonly)return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_BADF,nwritten};for(const iovec of iovs){const buf=new Uint8Array(view8.buffer,iovec.buf,iovec.buf_len);const n=this.file.handle.write(buf,{at:Number(this.position)});this.position+=BigInt(n);nwritten+=n}return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_SUCCESS,nwritten}}fd_datasync(){this.file.handle.flush();return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_SUCCESS}fd_sync(){return this.fd_datasync()}fd_close(){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_SUCCESS}constructor(file){super();this.position=0n;this.file=file}}class OpenDirectory extends _fd_js__WEBPACK_IMPORTED_MODULE_2__.Fd{fd_seek(offset,whence){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_ISDIR,offset:0n}}fd_fdstat_get(){return{ret:0,fdstat:new _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.Fdstat(_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.FILETYPE_DIRECTORY,0)}}fd_readdir_single(cookie){if(_debug_js__WEBPACK_IMPORTED_MODULE_0__.debug.enabled){_debug_js__WEBPACK_IMPORTED_MODULE_0__.debug.log(\"readdir_single\",cookie);_debug_js__WEBPACK_IMPORTED_MODULE_0__.debug.log(cookie,Object.keys(this.dir.contents))}_debug_js__WEBPACK_IMPORTED_MODULE_0__.debug.log(cookie,Object.keys(this.dir.contents).slice(Number(cookie)));if(cookie>=BigInt(Object.keys(this.dir.contents).length)){return{ret:0,dirent:null}}const name=Object.keys(this.dir.contents)[Number(cookie)];const entry=this.dir.contents[name];return{ret:0,dirent:new _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.Dirent(cookie+1n,name,entry.stat().filetype)}}path_filestat_get(flags,path){const entry=this.dir.get_entry_for_path(path);if(entry==null){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_NOENT,filestat:null}}return{ret:0,filestat:entry.stat()}}path_open(dirflags,path,oflags,fs_rights_base,fs_rights_inheriting,fd_flags){let entry=this.dir.get_entry_for_path(path);if(entry==null){if((oflags&_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.OFLAGS_CREAT)==_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.OFLAGS_CREAT){entry=this.dir.create_entry_for_path(path,(oflags&_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.OFLAGS_DIRECTORY)==_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.OFLAGS_DIRECTORY)}else{return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_NOENT,fd_obj:null}}}else if((oflags&_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.OFLAGS_EXCL)==_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.OFLAGS_EXCL){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_EXIST,fd_obj:null}}if((oflags&_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.OFLAGS_DIRECTORY)==_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.OFLAGS_DIRECTORY&&entry.stat().filetype!==_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.FILETYPE_DIRECTORY){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_NOTDIR,fd_obj:null}}if(entry.readonly&&(fs_rights_base&BigInt(_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.RIGHTS_FD_WRITE))==BigInt(_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.RIGHTS_FD_WRITE)){return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_PERM,fd_obj:null}}if(!(entry instanceof Directory)&&(oflags&_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.OFLAGS_TRUNC)==_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.OFLAGS_TRUNC){const ret=entry.truncate();if(ret!=_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_SUCCESS)return{ret,fd_obj:null}}return{ret:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_SUCCESS,fd_obj:entry.open(fd_flags)}}path_create_directory(path){return this.path_open(0,path,_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.OFLAGS_CREAT|_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.OFLAGS_DIRECTORY,0n,0n,0).ret}path_unlink_file(path){path=this.clean_path(path);const parentDirEntry=this.dir.get_parent_dir_for_path(path);const pathComponents=path.split(\"/\");const fileName=pathComponents[pathComponents.length-1];const entry=this.dir.get_entry_for_path(path);if(entry===null){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_NOENT}if(entry.stat().filetype===_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.FILETYPE_DIRECTORY){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_ISDIR}delete parentDirEntry.contents[fileName];return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_SUCCESS}path_remove_directory(path){path=this.clean_path(path);const parentDirEntry=this.dir.get_parent_dir_for_path(path);const pathComponents=path.split(\"/\");const fileName=pathComponents[pathComponents.length-1];const entry=this.dir.get_entry_for_path(path);if(entry===null){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_NOENT}if(!(entry instanceof Directory)||entry.stat().filetype!==_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.FILETYPE_DIRECTORY){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_NOTDIR}if(Object.keys(entry.contents).length!==0){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_NOTEMPTY}if(parentDirEntry.contents[fileName]===undefined){return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_NOENT}delete parentDirEntry.contents[fileName];return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_SUCCESS}clean_path(path){while(path.length>0&&path[path.length-1]===\"/\"){path=path.slice(0,path.length-1)}return path}constructor(dir){super();this.dir=dir}}class PreopenDirectory extends OpenDirectory{fd_prestat_get(){return{ret:0,prestat:_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.Prestat.dir(this.prestat_name.length)}}fd_prestat_dir_name(){return{ret:0,prestat_dir_name:this.prestat_name}}constructor(name,contents){super(new Directory(contents));this.prestat_name=new TextEncoder().encode(name)}}class File{open(fd_flags){const file=new OpenFile(this);if(fd_flags&_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.FDFLAGS_APPEND)file.fd_seek(0n,_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.WHENCE_END);return file}get size(){return BigInt(this.data.byteLength)}stat(){return new _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.Filestat(_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.FILETYPE_REGULAR_FILE,this.size)}truncate(){if(this.readonly)return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_PERM;this.data=new Uint8Array([]);return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_SUCCESS}constructor(data,options){this.data=new Uint8Array(data);this.readonly=!!options?.readonly}}class SyncOPFSFile{open(fd_flags){const file=new OpenSyncOPFSFile(this);if(fd_flags&_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.FDFLAGS_APPEND)file.fd_seek(0n,_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.WHENCE_END);return file}get size(){return BigInt(this.handle.getSize())}stat(){return new _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.Filestat(_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.FILETYPE_REGULAR_FILE,this.size)}truncate(){if(this.readonly)return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_PERM;this.handle.truncate(0);return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.ERRNO_SUCCESS}constructor(handle,options){this.handle=handle;this.readonly=!!options?.readonly}}class Directory{open(fd_flags){return new OpenDirectory(this)}stat(){return new _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.Filestat(_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.FILETYPE_DIRECTORY,0n)}get_entry_for_path(path){let entry=this;for(const component of path.split(\"/\")){if(component==\"\")break;if(component==\".\")continue;if(!(entry instanceof Directory)){return null}if(entry.contents[component]!=undefined){entry=entry.contents[component]}else{_debug_js__WEBPACK_IMPORTED_MODULE_0__.debug.log(component);return null}}return entry}get_parent_dir_for_path(path){if(path===\"\")return null;let entry=this;let parentEntry=entry;for(const component of path.split(\"/\")){if(component===\"\")break;if(component===\".\")continue;if(!(entry instanceof Directory)){_debug_js__WEBPACK_IMPORTED_MODULE_0__.debug.log(entry);return null}if(entry.contents[component]===undefined){_debug_js__WEBPACK_IMPORTED_MODULE_0__.debug.log(component);return null}parentEntry=entry;entry=entry.contents[component]}return parentEntry}create_entry_for_path(path,is_dir){let entry=this;const components=path.split(\"/\").filter(component=>component!=\"/\");for(let i=0;i<components.length;i++){const component=components[i];if(!(entry instanceof Directory)){break}if(entry.contents[component]!=undefined){entry=entry.contents[component]}else{_debug_js__WEBPACK_IMPORTED_MODULE_0__.debug.log(\"create\",component);if(i==components.length-1&&!is_dir){entry.contents[component]=new File(new ArrayBuffer(0))}else{entry.contents[component]=new Directory({})}entry=entry.contents[component]}}return entry}constructor(contents){this.readonly=false;this.contents=contents}}class ConsoleStdout extends _fd_js__WEBPACK_IMPORTED_MODULE_2__.Fd{fd_filestat_get(){const filestat=new _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.Filestat(_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.FILETYPE_CHARACTER_DEVICE,BigInt(0));return{ret:0,filestat}}fd_fdstat_get(){const fdstat=new _wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.Fdstat(_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.FILETYPE_CHARACTER_DEVICE,0);fdstat.fs_rights_base=BigInt(_wasi_defs_js__WEBPACK_IMPORTED_MODULE_1__.RIGHTS_FD_WRITE);return{ret:0,fdstat}}fd_write(view8,iovs){let nwritten=0;for(const iovec of iovs){const buffer=view8.slice(iovec.buf,iovec.buf+iovec.buf_len);this.write(buffer);nwritten+=iovec.buf_len}return{ret:0,nwritten}}static lineBuffered(write){const dec=new TextDecoder(\"utf-8\",{fatal:false});let line_buf=\"\";return new ConsoleStdout(buffer=>{line_buf+=dec.decode(buffer,{stream:true});const lines=line_buf.split(\"\\n\");for(const[i,line]of lines.entries()){if(i<lines.length-1){write(line)}else{line_buf=line}}})}constructor(write){super();this.write=write}}\n\n//# sourceURL=webpack://Stack/./node_modules/@bjorn3/browser_wasi_shim/dist/fs_core.js?");

/***/ }),

/***/ "./node_modules/@bjorn3/browser_wasi_shim/dist/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@bjorn3/browser_wasi_shim/dist/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConsoleStdout: () => (/* reexport safe */ _fs_core_js__WEBPACK_IMPORTED_MODULE_2__.ConsoleStdout),\n/* harmony export */   Directory: () => (/* reexport safe */ _fs_core_js__WEBPACK_IMPORTED_MODULE_2__.Directory),\n/* harmony export */   Fd: () => (/* reexport safe */ _fd_js__WEBPACK_IMPORTED_MODULE_1__.Fd),\n/* harmony export */   File: () => (/* reexport safe */ _fs_core_js__WEBPACK_IMPORTED_MODULE_2__.File),\n/* harmony export */   OpenDirectory: () => (/* reexport safe */ _fs_core_js__WEBPACK_IMPORTED_MODULE_2__.OpenDirectory),\n/* harmony export */   OpenFile: () => (/* reexport safe */ _fs_core_js__WEBPACK_IMPORTED_MODULE_2__.OpenFile),\n/* harmony export */   OpenSyncOPFSFile: () => (/* reexport safe */ _fs_core_js__WEBPACK_IMPORTED_MODULE_2__.OpenSyncOPFSFile),\n/* harmony export */   PreopenDirectory: () => (/* reexport safe */ _fs_core_js__WEBPACK_IMPORTED_MODULE_2__.PreopenDirectory),\n/* harmony export */   SyncOPFSFile: () => (/* reexport safe */ _fs_core_js__WEBPACK_IMPORTED_MODULE_2__.SyncOPFSFile),\n/* harmony export */   WASI: () => (/* reexport safe */ _wasi_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   WASIProcExit: () => (/* reexport safe */ _wasi_js__WEBPACK_IMPORTED_MODULE_0__.WASIProcExit),\n/* harmony export */   strace: () => (/* reexport safe */ _strace_js__WEBPACK_IMPORTED_MODULE_3__.strace),\n/* harmony export */   wasi: () => (/* reexport module object */ _wasi_defs_js__WEBPACK_IMPORTED_MODULE_4__)\n/* harmony export */ });\n/* harmony import */ var _wasi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wasi.js */ \"./node_modules/@bjorn3/browser_wasi_shim/dist/wasi.js\");\n/* harmony import */ var _fd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fd.js */ \"./node_modules/@bjorn3/browser_wasi_shim/dist/fd.js\");\n/* harmony import */ var _fs_core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fs_core.js */ \"./node_modules/@bjorn3/browser_wasi_shim/dist/fs_core.js\");\n/* harmony import */ var _strace_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./strace.js */ \"./node_modules/@bjorn3/browser_wasi_shim/dist/strace.js\");\n/* harmony import */ var _wasi_defs_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./wasi_defs.js */ \"./node_modules/@bjorn3/browser_wasi_shim/dist/wasi_defs.js\");\n\n\n//# sourceURL=webpack://Stack/./node_modules/@bjorn3/browser_wasi_shim/dist/index.js?");

/***/ }),

/***/ "./node_modules/@bjorn3/browser_wasi_shim/dist/strace.js":
/*!***************************************************************!*\
  !*** ./node_modules/@bjorn3/browser_wasi_shim/dist/strace.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   strace: () => (/* binding */ strace)\n/* harmony export */ });\nfunction strace(imports,no_trace){return new Proxy(imports,{get(target,prop,receiver){const f=Reflect.get(target,prop,receiver);if(no_trace.includes(prop)){return f}return function(...args){console.log(prop,\"(\",...args,\")\");const result=Reflect.apply(f,receiver,args);console.log(\" =\",result);return result}}})}\n\n//# sourceURL=webpack://Stack/./node_modules/@bjorn3/browser_wasi_shim/dist/strace.js?");

/***/ }),

/***/ "./node_modules/@bjorn3/browser_wasi_shim/dist/wasi.js":
/*!*************************************************************!*\
  !*** ./node_modules/@bjorn3/browser_wasi_shim/dist/wasi.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WASIProcExit: () => (/* binding */ WASIProcExit),\n/* harmony export */   \"default\": () => (/* binding */ WASI)\n/* harmony export */ });\n/* harmony import */ var _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wasi_defs.js */ \"./node_modules/@bjorn3/browser_wasi_shim/dist/wasi_defs.js\");\n/* harmony import */ var _debug_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug.js */ \"./node_modules/@bjorn3/browser_wasi_shim/dist/debug.js\");\nclass WASIProcExit extends Error{constructor(code){super(\"exit with exit code \"+code);this.code=code}}let WASI=class WASI{start(instance){this.inst=instance;try{instance.exports._start();return 0}catch(e){if(e instanceof WASIProcExit){return e.code}else{throw e}}}initialize(instance){this.inst=instance;if(instance.exports._initialize){instance.exports._initialize()}}constructor(args,env,fds,options={}){this.args=[];this.env=[];this.fds=[];_debug_js__WEBPACK_IMPORTED_MODULE_1__.debug.enable(options.debug);this.args=args;this.env=env;this.fds=fds;const self=this;this.wasiImport={args_sizes_get(argc,argv_buf_size){const buffer=new DataView(self.inst.exports.memory.buffer);buffer.setUint32(argc,self.args.length,true);let buf_size=0;for(const arg of self.args){buf_size+=arg.length+1}buffer.setUint32(argv_buf_size,buf_size,true);_debug_js__WEBPACK_IMPORTED_MODULE_1__.debug.log(buffer.getUint32(argc,true),buffer.getUint32(argv_buf_size,true));return 0},args_get(argv,argv_buf){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);const orig_argv_buf=argv_buf;for(let i=0;i<self.args.length;i++){buffer.setUint32(argv,argv_buf,true);argv+=4;const arg=new TextEncoder().encode(self.args[i]);buffer8.set(arg,argv_buf);buffer.setUint8(argv_buf+arg.length,0);argv_buf+=arg.length+1}if(_debug_js__WEBPACK_IMPORTED_MODULE_1__.debug.enabled){_debug_js__WEBPACK_IMPORTED_MODULE_1__.debug.log(new TextDecoder(\"utf-8\").decode(buffer8.slice(orig_argv_buf,argv_buf)))}return 0},environ_sizes_get(environ_count,environ_size){const buffer=new DataView(self.inst.exports.memory.buffer);buffer.setUint32(environ_count,self.env.length,true);let buf_size=0;for(const environ of self.env){buf_size+=environ.length+1}buffer.setUint32(environ_size,buf_size,true);_debug_js__WEBPACK_IMPORTED_MODULE_1__.debug.log(buffer.getUint32(environ_count,true),buffer.getUint32(environ_size,true));return 0},environ_get(environ,environ_buf){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);const orig_environ_buf=environ_buf;for(let i=0;i<self.env.length;i++){buffer.setUint32(environ,environ_buf,true);environ+=4;const e=new TextEncoder().encode(self.env[i]);buffer8.set(e,environ_buf);buffer.setUint8(environ_buf+e.length,0);environ_buf+=e.length+1}if(_debug_js__WEBPACK_IMPORTED_MODULE_1__.debug.enabled){_debug_js__WEBPACK_IMPORTED_MODULE_1__.debug.log(new TextDecoder(\"utf-8\").decode(buffer8.slice(orig_environ_buf,environ_buf)))}return 0},clock_res_get(id,res_ptr){let resolutionValue;switch(id){case _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.CLOCKID_MONOTONIC:{resolutionValue=5000n;break}case _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.CLOCKID_REALTIME:{resolutionValue=1000000n;break}default:return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_NOSYS}const view=new DataView(self.inst.exports.memory.buffer);view.setBigUint64(res_ptr,resolutionValue,true);return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_SUCCESS},clock_time_get(id,precision,time){const buffer=new DataView(self.inst.exports.memory.buffer);if(id===_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.CLOCKID_REALTIME){buffer.setBigUint64(time,BigInt(new Date().getTime())*1000000n,true)}else if(id==_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.CLOCKID_MONOTONIC){let monotonic_time;try{monotonic_time=BigInt(Math.round(performance.now()*1e6))}catch(e){monotonic_time=0n}buffer.setBigUint64(time,monotonic_time,true)}else{buffer.setBigUint64(time,0n,true)}return 0},fd_advise(fd,offset,len,advice){if(self.fds[fd]!=undefined){return self.fds[fd].fd_advise(offset,len,advice)}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_allocate(fd,offset,len){if(self.fds[fd]!=undefined){return self.fds[fd].fd_allocate(offset,len)}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_close(fd){if(self.fds[fd]!=undefined){const ret=self.fds[fd].fd_close();self.fds[fd]=undefined;return ret}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_datasync(fd){if(self.fds[fd]!=undefined){return self.fds[fd].fd_datasync()}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_fdstat_get(fd,fdstat_ptr){if(self.fds[fd]!=undefined){const{ret,fdstat}=self.fds[fd].fd_fdstat_get();if(fdstat!=null){fdstat.write_bytes(new DataView(self.inst.exports.memory.buffer),fdstat_ptr)}return ret}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_fdstat_set_flags(fd,flags){if(self.fds[fd]!=undefined){return self.fds[fd].fd_fdstat_set_flags(flags)}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_fdstat_set_rights(fd,fs_rights_base,fs_rights_inheriting){if(self.fds[fd]!=undefined){return self.fds[fd].fd_fdstat_set_rights(fs_rights_base,fs_rights_inheriting)}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_filestat_get(fd,filestat_ptr){if(self.fds[fd]!=undefined){const{ret,filestat}=self.fds[fd].fd_filestat_get();if(filestat!=null){filestat.write_bytes(new DataView(self.inst.exports.memory.buffer),filestat_ptr)}return ret}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_filestat_set_size(fd,size){if(self.fds[fd]!=undefined){return self.fds[fd].fd_filestat_set_size(size)}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_filestat_set_times(fd,atim,mtim,fst_flags){if(self.fds[fd]!=undefined){return self.fds[fd].fd_filestat_set_times(atim,mtim,fst_flags)}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_pread(fd,iovs_ptr,iovs_len,offset,nread_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const iovecs=_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.Iovec.read_bytes_array(buffer,iovs_ptr,iovs_len);const{ret,nread}=self.fds[fd].fd_pread(buffer8,iovecs,offset);buffer.setUint32(nread_ptr,nread,true);return ret}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_prestat_get(fd,buf_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const{ret,prestat}=self.fds[fd].fd_prestat_get();if(prestat!=null){prestat.write_bytes(buffer,buf_ptr)}return ret}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_prestat_dir_name(fd,path_ptr,path_len){if(self.fds[fd]!=undefined){const{ret,prestat_dir_name}=self.fds[fd].fd_prestat_dir_name();if(prestat_dir_name!=null){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);buffer8.set(prestat_dir_name,path_ptr)}return ret}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_pwrite(fd,iovs_ptr,iovs_len,offset,nwritten_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const iovecs=_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.Ciovec.read_bytes_array(buffer,iovs_ptr,iovs_len);const{ret,nwritten}=self.fds[fd].fd_pwrite(buffer8,iovecs,offset);buffer.setUint32(nwritten_ptr,nwritten,true);return ret}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_read(fd,iovs_ptr,iovs_len,nread_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const iovecs=_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.Iovec.read_bytes_array(buffer,iovs_ptr,iovs_len);const{ret,nread}=self.fds[fd].fd_read(buffer8,iovecs);buffer.setUint32(nread_ptr,nread,true);return ret}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_readdir(fd,buf,buf_len,cookie,bufused_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){let bufused=0;while(true){const{ret,dirent}=self.fds[fd].fd_readdir_single(cookie);if(ret!=0){buffer.setUint32(bufused_ptr,bufused,true);return ret}if(dirent==null){break}if(buf_len-bufused<dirent.head_length()){bufused=buf_len;break}const head_bytes=new ArrayBuffer(dirent.head_length());dirent.write_head_bytes(new DataView(head_bytes),0);buffer8.set(new Uint8Array(head_bytes).slice(0,Math.min(head_bytes.byteLength,buf_len-bufused)),buf);buf+=dirent.head_length();bufused+=dirent.head_length();if(buf_len-bufused<dirent.name_length()){bufused=buf_len;break}dirent.write_name_bytes(buffer8,buf,buf_len-bufused);buf+=dirent.name_length();bufused+=dirent.name_length();cookie=dirent.d_next}buffer.setUint32(bufused_ptr,bufused,true);return 0}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_renumber(fd,to){if(self.fds[fd]!=undefined&&self.fds[to]!=undefined){const ret=self.fds[to].fd_close();if(ret!=0){return ret}self.fds[to]=self.fds[fd];self.fds[fd]=undefined;return 0}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_seek(fd,offset,whence,offset_out_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const{ret,offset:offset_out}=self.fds[fd].fd_seek(offset,whence);buffer.setBigInt64(offset_out_ptr,offset_out,true);return ret}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_sync(fd){if(self.fds[fd]!=undefined){return self.fds[fd].fd_sync()}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_tell(fd,offset_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const{ret,offset}=self.fds[fd].fd_tell();buffer.setBigUint64(offset_ptr,offset,true);return ret}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},fd_write(fd,iovs_ptr,iovs_len,nwritten_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const iovecs=_wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.Ciovec.read_bytes_array(buffer,iovs_ptr,iovs_len);const{ret,nwritten}=self.fds[fd].fd_write(buffer8,iovecs);buffer.setUint32(nwritten_ptr,nwritten,true);return ret}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},path_create_directory(fd,path_ptr,path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));return self.fds[fd].path_create_directory(path)}},path_filestat_get(fd,flags,path_ptr,path_len,filestat_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));const{ret,filestat}=self.fds[fd].path_filestat_get(flags,path);if(filestat!=null){filestat.write_bytes(buffer,filestat_ptr)}return ret}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},path_filestat_set_times(fd,flags,path_ptr,path_len,atim,mtim,fst_flags){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));return self.fds[fd].path_filestat_set_times(flags,path,atim,mtim,fst_flags)}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},path_link(old_fd,old_flags,old_path_ptr,old_path_len,new_fd,new_path_ptr,new_path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[old_fd]!=undefined&&self.fds[new_fd]!=undefined){const old_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(old_path_ptr,old_path_ptr+old_path_len));const new_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(new_path_ptr,new_path_ptr+new_path_len));return self.fds[new_fd].path_link(old_fd,old_flags,old_path,new_path)}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},path_open(fd,dirflags,path_ptr,path_len,oflags,fs_rights_base,fs_rights_inheriting,fd_flags,opened_fd_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));_debug_js__WEBPACK_IMPORTED_MODULE_1__.debug.log(path);const{ret,fd_obj}=self.fds[fd].path_open(dirflags,path,oflags,fs_rights_base,fs_rights_inheriting,fd_flags);if(ret!=0){return ret}self.fds.push(fd_obj);const opened_fd=self.fds.length-1;buffer.setUint32(opened_fd_ptr,opened_fd,true);return 0}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},path_readlink(fd,path_ptr,path_len,buf_ptr,buf_len,nread_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));_debug_js__WEBPACK_IMPORTED_MODULE_1__.debug.log(path);const{ret,data}=self.fds[fd].path_readlink(path);if(data!=null){const data_buf=new TextEncoder().encode(data);if(data_buf.length>buf_len){buffer.setUint32(nread_ptr,0,true);return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}buffer8.set(data_buf,buf_ptr);buffer.setUint32(nread_ptr,data_buf.length,true)}return ret}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},path_remove_directory(fd,path_ptr,path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));return self.fds[fd].path_remove_directory(path)}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},path_rename(fd,old_path_ptr,old_path_len,new_fd,new_path_ptr,new_path_len){throw\"FIXME what is the best abstraction for this?\"},path_symlink(old_path_ptr,old_path_len,fd,new_path_ptr,new_path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const old_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(old_path_ptr,old_path_ptr+old_path_len));const new_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(new_path_ptr,new_path_ptr+new_path_len));return self.fds[fd].path_symlink(old_path,new_path)}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},path_unlink_file(fd,path_ptr,path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));return self.fds[fd].path_unlink_file(path)}else{return _wasi_defs_js__WEBPACK_IMPORTED_MODULE_0__.ERRNO_BADF}},poll_oneoff(in_,out,nsubscriptions){throw\"async io not supported\"},proc_exit(exit_code){throw new WASIProcExit(exit_code)},proc_raise(sig){throw\"raised signal \"+sig},sched_yield(){},random_get(buf,buf_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);for(let i=0;i<buf_len;i++){buffer8[buf+i]=Math.random()*256|0}},sock_recv(fd,ri_data,ri_flags){throw\"sockets not supported\"},sock_send(fd,si_data,si_flags){throw\"sockets not supported\"},sock_shutdown(fd,how){throw\"sockets not supported\"},sock_accept(fd,flags){throw\"sockets not supported\"}}}};\n\n//# sourceURL=webpack://Stack/./node_modules/@bjorn3/browser_wasi_shim/dist/wasi.js?");

/***/ }),

/***/ "./node_modules/@bjorn3/browser_wasi_shim/dist/wasi_defs.js":
/*!******************************************************************!*\
  !*** ./node_modules/@bjorn3/browser_wasi_shim/dist/wasi_defs.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ADVICE_DONTNEED: () => (/* binding */ ADVICE_DONTNEED),\n/* harmony export */   ADVICE_NOREUSE: () => (/* binding */ ADVICE_NOREUSE),\n/* harmony export */   ADVICE_NORMAL: () => (/* binding */ ADVICE_NORMAL),\n/* harmony export */   ADVICE_RANDOM: () => (/* binding */ ADVICE_RANDOM),\n/* harmony export */   ADVICE_SEQUENTIAL: () => (/* binding */ ADVICE_SEQUENTIAL),\n/* harmony export */   ADVICE_WILLNEED: () => (/* binding */ ADVICE_WILLNEED),\n/* harmony export */   CLOCKID_MONOTONIC: () => (/* binding */ CLOCKID_MONOTONIC),\n/* harmony export */   CLOCKID_PROCESS_CPUTIME_ID: () => (/* binding */ CLOCKID_PROCESS_CPUTIME_ID),\n/* harmony export */   CLOCKID_REALTIME: () => (/* binding */ CLOCKID_REALTIME),\n/* harmony export */   CLOCKID_THREAD_CPUTIME_ID: () => (/* binding */ CLOCKID_THREAD_CPUTIME_ID),\n/* harmony export */   Ciovec: () => (/* binding */ Ciovec),\n/* harmony export */   Dirent: () => (/* binding */ Dirent),\n/* harmony export */   ERRNO_2BIG: () => (/* binding */ ERRNO_2BIG),\n/* harmony export */   ERRNO_ACCES: () => (/* binding */ ERRNO_ACCES),\n/* harmony export */   ERRNO_ADDRINUSE: () => (/* binding */ ERRNO_ADDRINUSE),\n/* harmony export */   ERRNO_ADDRNOTAVAIL: () => (/* binding */ ERRNO_ADDRNOTAVAIL),\n/* harmony export */   ERRNO_AFNOSUPPORT: () => (/* binding */ ERRNO_AFNOSUPPORT),\n/* harmony export */   ERRNO_AGAIN: () => (/* binding */ ERRNO_AGAIN),\n/* harmony export */   ERRNO_ALREADY: () => (/* binding */ ERRNO_ALREADY),\n/* harmony export */   ERRNO_BADF: () => (/* binding */ ERRNO_BADF),\n/* harmony export */   ERRNO_BADMSG: () => (/* binding */ ERRNO_BADMSG),\n/* harmony export */   ERRNO_BUSY: () => (/* binding */ ERRNO_BUSY),\n/* harmony export */   ERRNO_CANCELED: () => (/* binding */ ERRNO_CANCELED),\n/* harmony export */   ERRNO_CHILD: () => (/* binding */ ERRNO_CHILD),\n/* harmony export */   ERRNO_CONNABORTED: () => (/* binding */ ERRNO_CONNABORTED),\n/* harmony export */   ERRNO_CONNREFUSED: () => (/* binding */ ERRNO_CONNREFUSED),\n/* harmony export */   ERRNO_CONNRESET: () => (/* binding */ ERRNO_CONNRESET),\n/* harmony export */   ERRNO_DEADLK: () => (/* binding */ ERRNO_DEADLK),\n/* harmony export */   ERRNO_DESTADDRREQ: () => (/* binding */ ERRNO_DESTADDRREQ),\n/* harmony export */   ERRNO_DOM: () => (/* binding */ ERRNO_DOM),\n/* harmony export */   ERRNO_DQUOT: () => (/* binding */ ERRNO_DQUOT),\n/* harmony export */   ERRNO_EXIST: () => (/* binding */ ERRNO_EXIST),\n/* harmony export */   ERRNO_FAULT: () => (/* binding */ ERRNO_FAULT),\n/* harmony export */   ERRNO_FBIG: () => (/* binding */ ERRNO_FBIG),\n/* harmony export */   ERRNO_HOSTUNREACH: () => (/* binding */ ERRNO_HOSTUNREACH),\n/* harmony export */   ERRNO_IDRM: () => (/* binding */ ERRNO_IDRM),\n/* harmony export */   ERRNO_ILSEQ: () => (/* binding */ ERRNO_ILSEQ),\n/* harmony export */   ERRNO_INPROGRESS: () => (/* binding */ ERRNO_INPROGRESS),\n/* harmony export */   ERRNO_INTR: () => (/* binding */ ERRNO_INTR),\n/* harmony export */   ERRNO_INVAL: () => (/* binding */ ERRNO_INVAL),\n/* harmony export */   ERRNO_IO: () => (/* binding */ ERRNO_IO),\n/* harmony export */   ERRNO_ISCONN: () => (/* binding */ ERRNO_ISCONN),\n/* harmony export */   ERRNO_ISDIR: () => (/* binding */ ERRNO_ISDIR),\n/* harmony export */   ERRNO_LOOP: () => (/* binding */ ERRNO_LOOP),\n/* harmony export */   ERRNO_MFILE: () => (/* binding */ ERRNO_MFILE),\n/* harmony export */   ERRNO_MLINK: () => (/* binding */ ERRNO_MLINK),\n/* harmony export */   ERRNO_MSGSIZE: () => (/* binding */ ERRNO_MSGSIZE),\n/* harmony export */   ERRNO_MULTIHOP: () => (/* binding */ ERRNO_MULTIHOP),\n/* harmony export */   ERRNO_NAMETOOLONG: () => (/* binding */ ERRNO_NAMETOOLONG),\n/* harmony export */   ERRNO_NETDOWN: () => (/* binding */ ERRNO_NETDOWN),\n/* harmony export */   ERRNO_NETRESET: () => (/* binding */ ERRNO_NETRESET),\n/* harmony export */   ERRNO_NETUNREACH: () => (/* binding */ ERRNO_NETUNREACH),\n/* harmony export */   ERRNO_NFILE: () => (/* binding */ ERRNO_NFILE),\n/* harmony export */   ERRNO_NOBUFS: () => (/* binding */ ERRNO_NOBUFS),\n/* harmony export */   ERRNO_NODEV: () => (/* binding */ ERRNO_NODEV),\n/* harmony export */   ERRNO_NOENT: () => (/* binding */ ERRNO_NOENT),\n/* harmony export */   ERRNO_NOEXEC: () => (/* binding */ ERRNO_NOEXEC),\n/* harmony export */   ERRNO_NOLCK: () => (/* binding */ ERRNO_NOLCK),\n/* harmony export */   ERRNO_NOLINK: () => (/* binding */ ERRNO_NOLINK),\n/* harmony export */   ERRNO_NOMEM: () => (/* binding */ ERRNO_NOMEM),\n/* harmony export */   ERRNO_NOMSG: () => (/* binding */ ERRNO_NOMSG),\n/* harmony export */   ERRNO_NOPROTOOPT: () => (/* binding */ ERRNO_NOPROTOOPT),\n/* harmony export */   ERRNO_NOSPC: () => (/* binding */ ERRNO_NOSPC),\n/* harmony export */   ERRNO_NOSYS: () => (/* binding */ ERRNO_NOSYS),\n/* harmony export */   ERRNO_NOTCAPABLE: () => (/* binding */ ERRNO_NOTCAPABLE),\n/* harmony export */   ERRNO_NOTCONN: () => (/* binding */ ERRNO_NOTCONN),\n/* harmony export */   ERRNO_NOTDIR: () => (/* binding */ ERRNO_NOTDIR),\n/* harmony export */   ERRNO_NOTEMPTY: () => (/* binding */ ERRNO_NOTEMPTY),\n/* harmony export */   ERRNO_NOTRECOVERABLE: () => (/* binding */ ERRNO_NOTRECOVERABLE),\n/* harmony export */   ERRNO_NOTSOCK: () => (/* binding */ ERRNO_NOTSOCK),\n/* harmony export */   ERRNO_NOTSUP: () => (/* binding */ ERRNO_NOTSUP),\n/* harmony export */   ERRNO_NOTTY: () => (/* binding */ ERRNO_NOTTY),\n/* harmony export */   ERRNO_NXIO: () => (/* binding */ ERRNO_NXIO),\n/* harmony export */   ERRNO_OVERFLOW: () => (/* binding */ ERRNO_OVERFLOW),\n/* harmony export */   ERRNO_OWNERDEAD: () => (/* binding */ ERRNO_OWNERDEAD),\n/* harmony export */   ERRNO_PERM: () => (/* binding */ ERRNO_PERM),\n/* harmony export */   ERRNO_PIPE: () => (/* binding */ ERRNO_PIPE),\n/* harmony export */   ERRNO_PROTO: () => (/* binding */ ERRNO_PROTO),\n/* harmony export */   ERRNO_PROTONOSUPPORT: () => (/* binding */ ERRNO_PROTONOSUPPORT),\n/* harmony export */   ERRNO_PROTOTYPE: () => (/* binding */ ERRNO_PROTOTYPE),\n/* harmony export */   ERRNO_RANGE: () => (/* binding */ ERRNO_RANGE),\n/* harmony export */   ERRNO_ROFS: () => (/* binding */ ERRNO_ROFS),\n/* harmony export */   ERRNO_SPIPE: () => (/* binding */ ERRNO_SPIPE),\n/* harmony export */   ERRNO_SRCH: () => (/* binding */ ERRNO_SRCH),\n/* harmony export */   ERRNO_STALE: () => (/* binding */ ERRNO_STALE),\n/* harmony export */   ERRNO_SUCCESS: () => (/* binding */ ERRNO_SUCCESS),\n/* harmony export */   ERRNO_TIMEDOUT: () => (/* binding */ ERRNO_TIMEDOUT),\n/* harmony export */   ERRNO_TXTBSY: () => (/* binding */ ERRNO_TXTBSY),\n/* harmony export */   ERRNO_XDEV: () => (/* binding */ ERRNO_XDEV),\n/* harmony export */   EVENTRWFLAGS_FD_READWRITE_HANGUP: () => (/* binding */ EVENTRWFLAGS_FD_READWRITE_HANGUP),\n/* harmony export */   EVENTTYPE_CLOCK: () => (/* binding */ EVENTTYPE_CLOCK),\n/* harmony export */   EVENTTYPE_FD_READ: () => (/* binding */ EVENTTYPE_FD_READ),\n/* harmony export */   EVENTTYPE_FD_WRITE: () => (/* binding */ EVENTTYPE_FD_WRITE),\n/* harmony export */   FDFLAGS_APPEND: () => (/* binding */ FDFLAGS_APPEND),\n/* harmony export */   FDFLAGS_DSYNC: () => (/* binding */ FDFLAGS_DSYNC),\n/* harmony export */   FDFLAGS_NONBLOCK: () => (/* binding */ FDFLAGS_NONBLOCK),\n/* harmony export */   FDFLAGS_RSYNC: () => (/* binding */ FDFLAGS_RSYNC),\n/* harmony export */   FDFLAGS_SYNC: () => (/* binding */ FDFLAGS_SYNC),\n/* harmony export */   FD_STDERR: () => (/* binding */ FD_STDERR),\n/* harmony export */   FD_STDIN: () => (/* binding */ FD_STDIN),\n/* harmony export */   FD_STDOUT: () => (/* binding */ FD_STDOUT),\n/* harmony export */   FILETYPE_BLOCK_DEVICE: () => (/* binding */ FILETYPE_BLOCK_DEVICE),\n/* harmony export */   FILETYPE_CHARACTER_DEVICE: () => (/* binding */ FILETYPE_CHARACTER_DEVICE),\n/* harmony export */   FILETYPE_DIRECTORY: () => (/* binding */ FILETYPE_DIRECTORY),\n/* harmony export */   FILETYPE_REGULAR_FILE: () => (/* binding */ FILETYPE_REGULAR_FILE),\n/* harmony export */   FILETYPE_SOCKET_DGRAM: () => (/* binding */ FILETYPE_SOCKET_DGRAM),\n/* harmony export */   FILETYPE_SOCKET_STREAM: () => (/* binding */ FILETYPE_SOCKET_STREAM),\n/* harmony export */   FILETYPE_SYMBOLIC_LINK: () => (/* binding */ FILETYPE_SYMBOLIC_LINK),\n/* harmony export */   FILETYPE_UNKNOWN: () => (/* binding */ FILETYPE_UNKNOWN),\n/* harmony export */   FSTFLAGS_ATIM: () => (/* binding */ FSTFLAGS_ATIM),\n/* harmony export */   FSTFLAGS_ATIM_NOW: () => (/* binding */ FSTFLAGS_ATIM_NOW),\n/* harmony export */   FSTFLAGS_MTIM: () => (/* binding */ FSTFLAGS_MTIM),\n/* harmony export */   FSTFLAGS_MTIM_NOW: () => (/* binding */ FSTFLAGS_MTIM_NOW),\n/* harmony export */   Fdstat: () => (/* binding */ Fdstat),\n/* harmony export */   Filestat: () => (/* binding */ Filestat),\n/* harmony export */   Iovec: () => (/* binding */ Iovec),\n/* harmony export */   OFLAGS_CREAT: () => (/* binding */ OFLAGS_CREAT),\n/* harmony export */   OFLAGS_DIRECTORY: () => (/* binding */ OFLAGS_DIRECTORY),\n/* harmony export */   OFLAGS_EXCL: () => (/* binding */ OFLAGS_EXCL),\n/* harmony export */   OFLAGS_TRUNC: () => (/* binding */ OFLAGS_TRUNC),\n/* harmony export */   PREOPENTYPE_DIR: () => (/* binding */ PREOPENTYPE_DIR),\n/* harmony export */   Prestat: () => (/* binding */ Prestat),\n/* harmony export */   PrestatDir: () => (/* binding */ PrestatDir),\n/* harmony export */   RIFLAGS_RECV_PEEK: () => (/* binding */ RIFLAGS_RECV_PEEK),\n/* harmony export */   RIFLAGS_RECV_WAITALL: () => (/* binding */ RIFLAGS_RECV_WAITALL),\n/* harmony export */   RIGHTS_FD_ADVISE: () => (/* binding */ RIGHTS_FD_ADVISE),\n/* harmony export */   RIGHTS_FD_ALLOCATE: () => (/* binding */ RIGHTS_FD_ALLOCATE),\n/* harmony export */   RIGHTS_FD_DATASYNC: () => (/* binding */ RIGHTS_FD_DATASYNC),\n/* harmony export */   RIGHTS_FD_FDSTAT_SET_FLAGS: () => (/* binding */ RIGHTS_FD_FDSTAT_SET_FLAGS),\n/* harmony export */   RIGHTS_FD_FILESTAT_GET: () => (/* binding */ RIGHTS_FD_FILESTAT_GET),\n/* harmony export */   RIGHTS_FD_FILESTAT_SET_SIZE: () => (/* binding */ RIGHTS_FD_FILESTAT_SET_SIZE),\n/* harmony export */   RIGHTS_FD_FILESTAT_SET_TIMES: () => (/* binding */ RIGHTS_FD_FILESTAT_SET_TIMES),\n/* harmony export */   RIGHTS_FD_READ: () => (/* binding */ RIGHTS_FD_READ),\n/* harmony export */   RIGHTS_FD_READDIR: () => (/* binding */ RIGHTS_FD_READDIR),\n/* harmony export */   RIGHTS_FD_SEEK: () => (/* binding */ RIGHTS_FD_SEEK),\n/* harmony export */   RIGHTS_FD_SYNC: () => (/* binding */ RIGHTS_FD_SYNC),\n/* harmony export */   RIGHTS_FD_TELL: () => (/* binding */ RIGHTS_FD_TELL),\n/* harmony export */   RIGHTS_FD_WRITE: () => (/* binding */ RIGHTS_FD_WRITE),\n/* harmony export */   RIGHTS_PATH_CREATE_DIRECTORY: () => (/* binding */ RIGHTS_PATH_CREATE_DIRECTORY),\n/* harmony export */   RIGHTS_PATH_CREATE_FILE: () => (/* binding */ RIGHTS_PATH_CREATE_FILE),\n/* harmony export */   RIGHTS_PATH_FILESTAT_GET: () => (/* binding */ RIGHTS_PATH_FILESTAT_GET),\n/* harmony export */   RIGHTS_PATH_FILESTAT_SET_SIZE: () => (/* binding */ RIGHTS_PATH_FILESTAT_SET_SIZE),\n/* harmony export */   RIGHTS_PATH_FILESTAT_SET_TIMES: () => (/* binding */ RIGHTS_PATH_FILESTAT_SET_TIMES),\n/* harmony export */   RIGHTS_PATH_LINK_SOURCE: () => (/* binding */ RIGHTS_PATH_LINK_SOURCE),\n/* harmony export */   RIGHTS_PATH_LINK_TARGET: () => (/* binding */ RIGHTS_PATH_LINK_TARGET),\n/* harmony export */   RIGHTS_PATH_OPEN: () => (/* binding */ RIGHTS_PATH_OPEN),\n/* harmony export */   RIGHTS_PATH_READLINK: () => (/* binding */ RIGHTS_PATH_READLINK),\n/* harmony export */   RIGHTS_PATH_REMOVE_DIRECTORY: () => (/* binding */ RIGHTS_PATH_REMOVE_DIRECTORY),\n/* harmony export */   RIGHTS_PATH_RENAME_SOURCE: () => (/* binding */ RIGHTS_PATH_RENAME_SOURCE),\n/* harmony export */   RIGHTS_PATH_RENAME_TARGET: () => (/* binding */ RIGHTS_PATH_RENAME_TARGET),\n/* harmony export */   RIGHTS_PATH_SYMLINK: () => (/* binding */ RIGHTS_PATH_SYMLINK),\n/* harmony export */   RIGHTS_PATH_UNLINK_FILE: () => (/* binding */ RIGHTS_PATH_UNLINK_FILE),\n/* harmony export */   RIGHTS_POLL_FD_READWRITE: () => (/* binding */ RIGHTS_POLL_FD_READWRITE),\n/* harmony export */   RIGHTS_SOCK_SHUTDOWN: () => (/* binding */ RIGHTS_SOCK_SHUTDOWN),\n/* harmony export */   ROFLAGS_RECV_DATA_TRUNCATED: () => (/* binding */ ROFLAGS_RECV_DATA_TRUNCATED),\n/* harmony export */   SDFLAGS_RD: () => (/* binding */ SDFLAGS_RD),\n/* harmony export */   SDFLAGS_WR: () => (/* binding */ SDFLAGS_WR),\n/* harmony export */   SIGNAL_ABRT: () => (/* binding */ SIGNAL_ABRT),\n/* harmony export */   SIGNAL_ALRM: () => (/* binding */ SIGNAL_ALRM),\n/* harmony export */   SIGNAL_BUS: () => (/* binding */ SIGNAL_BUS),\n/* harmony export */   SIGNAL_CHLD: () => (/* binding */ SIGNAL_CHLD),\n/* harmony export */   SIGNAL_CONT: () => (/* binding */ SIGNAL_CONT),\n/* harmony export */   SIGNAL_FPE: () => (/* binding */ SIGNAL_FPE),\n/* harmony export */   SIGNAL_HUP: () => (/* binding */ SIGNAL_HUP),\n/* harmony export */   SIGNAL_ILL: () => (/* binding */ SIGNAL_ILL),\n/* harmony export */   SIGNAL_INT: () => (/* binding */ SIGNAL_INT),\n/* harmony export */   SIGNAL_KILL: () => (/* binding */ SIGNAL_KILL),\n/* harmony export */   SIGNAL_NONE: () => (/* binding */ SIGNAL_NONE),\n/* harmony export */   SIGNAL_PIPE: () => (/* binding */ SIGNAL_PIPE),\n/* harmony export */   SIGNAL_POLL: () => (/* binding */ SIGNAL_POLL),\n/* harmony export */   SIGNAL_PROF: () => (/* binding */ SIGNAL_PROF),\n/* harmony export */   SIGNAL_PWR: () => (/* binding */ SIGNAL_PWR),\n/* harmony export */   SIGNAL_QUIT: () => (/* binding */ SIGNAL_QUIT),\n/* harmony export */   SIGNAL_SEGV: () => (/* binding */ SIGNAL_SEGV),\n/* harmony export */   SIGNAL_STOP: () => (/* binding */ SIGNAL_STOP),\n/* harmony export */   SIGNAL_SYS: () => (/* binding */ SIGNAL_SYS),\n/* harmony export */   SIGNAL_TERM: () => (/* binding */ SIGNAL_TERM),\n/* harmony export */   SIGNAL_TRAP: () => (/* binding */ SIGNAL_TRAP),\n/* harmony export */   SIGNAL_TSTP: () => (/* binding */ SIGNAL_TSTP),\n/* harmony export */   SIGNAL_TTIN: () => (/* binding */ SIGNAL_TTIN),\n/* harmony export */   SIGNAL_TTOU: () => (/* binding */ SIGNAL_TTOU),\n/* harmony export */   SIGNAL_URG: () => (/* binding */ SIGNAL_URG),\n/* harmony export */   SIGNAL_USR1: () => (/* binding */ SIGNAL_USR1),\n/* harmony export */   SIGNAL_USR2: () => (/* binding */ SIGNAL_USR2),\n/* harmony export */   SIGNAL_VTALRM: () => (/* binding */ SIGNAL_VTALRM),\n/* harmony export */   SIGNAL_WINCH: () => (/* binding */ SIGNAL_WINCH),\n/* harmony export */   SIGNAL_XCPU: () => (/* binding */ SIGNAL_XCPU),\n/* harmony export */   SIGNAL_XFSZ: () => (/* binding */ SIGNAL_XFSZ),\n/* harmony export */   SUBCLOCKFLAGS_SUBSCRIPTION_CLOCK_ABSTIME: () => (/* binding */ SUBCLOCKFLAGS_SUBSCRIPTION_CLOCK_ABSTIME),\n/* harmony export */   WHENCE_CUR: () => (/* binding */ WHENCE_CUR),\n/* harmony export */   WHENCE_END: () => (/* binding */ WHENCE_END),\n/* harmony export */   WHENCE_SET: () => (/* binding */ WHENCE_SET)\n/* harmony export */ });\nconst FD_STDIN=0;const FD_STDOUT=1;const FD_STDERR=2;const CLOCKID_REALTIME=0;const CLOCKID_MONOTONIC=1;const CLOCKID_PROCESS_CPUTIME_ID=2;const CLOCKID_THREAD_CPUTIME_ID=3;const ERRNO_SUCCESS=0;const ERRNO_2BIG=1;const ERRNO_ACCES=2;const ERRNO_ADDRINUSE=3;const ERRNO_ADDRNOTAVAIL=4;const ERRNO_AFNOSUPPORT=5;const ERRNO_AGAIN=6;const ERRNO_ALREADY=7;const ERRNO_BADF=8;const ERRNO_BADMSG=9;const ERRNO_BUSY=10;const ERRNO_CANCELED=11;const ERRNO_CHILD=12;const ERRNO_CONNABORTED=13;const ERRNO_CONNREFUSED=14;const ERRNO_CONNRESET=15;const ERRNO_DEADLK=16;const ERRNO_DESTADDRREQ=17;const ERRNO_DOM=18;const ERRNO_DQUOT=19;const ERRNO_EXIST=20;const ERRNO_FAULT=21;const ERRNO_FBIG=22;const ERRNO_HOSTUNREACH=23;const ERRNO_IDRM=24;const ERRNO_ILSEQ=25;const ERRNO_INPROGRESS=26;const ERRNO_INTR=27;const ERRNO_INVAL=28;const ERRNO_IO=29;const ERRNO_ISCONN=30;const ERRNO_ISDIR=31;const ERRNO_LOOP=32;const ERRNO_MFILE=33;const ERRNO_MLINK=34;const ERRNO_MSGSIZE=35;const ERRNO_MULTIHOP=36;const ERRNO_NAMETOOLONG=37;const ERRNO_NETDOWN=38;const ERRNO_NETRESET=39;const ERRNO_NETUNREACH=40;const ERRNO_NFILE=41;const ERRNO_NOBUFS=42;const ERRNO_NODEV=43;const ERRNO_NOENT=44;const ERRNO_NOEXEC=45;const ERRNO_NOLCK=46;const ERRNO_NOLINK=47;const ERRNO_NOMEM=48;const ERRNO_NOMSG=49;const ERRNO_NOPROTOOPT=50;const ERRNO_NOSPC=51;const ERRNO_NOSYS=52;const ERRNO_NOTCONN=53;const ERRNO_NOTDIR=54;const ERRNO_NOTEMPTY=55;const ERRNO_NOTRECOVERABLE=56;const ERRNO_NOTSOCK=57;const ERRNO_NOTSUP=58;const ERRNO_NOTTY=59;const ERRNO_NXIO=60;const ERRNO_OVERFLOW=61;const ERRNO_OWNERDEAD=62;const ERRNO_PERM=63;const ERRNO_PIPE=64;const ERRNO_PROTO=65;const ERRNO_PROTONOSUPPORT=66;const ERRNO_PROTOTYPE=67;const ERRNO_RANGE=68;const ERRNO_ROFS=69;const ERRNO_SPIPE=70;const ERRNO_SRCH=71;const ERRNO_STALE=72;const ERRNO_TIMEDOUT=73;const ERRNO_TXTBSY=74;const ERRNO_XDEV=75;const ERRNO_NOTCAPABLE=76;const RIGHTS_FD_DATASYNC=1<<0;const RIGHTS_FD_READ=1<<1;const RIGHTS_FD_SEEK=1<<2;const RIGHTS_FD_FDSTAT_SET_FLAGS=1<<3;const RIGHTS_FD_SYNC=1<<4;const RIGHTS_FD_TELL=1<<5;const RIGHTS_FD_WRITE=1<<6;const RIGHTS_FD_ADVISE=1<<7;const RIGHTS_FD_ALLOCATE=1<<8;const RIGHTS_PATH_CREATE_DIRECTORY=1<<9;const RIGHTS_PATH_CREATE_FILE=1<<10;const RIGHTS_PATH_LINK_SOURCE=1<<11;const RIGHTS_PATH_LINK_TARGET=1<<12;const RIGHTS_PATH_OPEN=1<<13;const RIGHTS_FD_READDIR=1<<14;const RIGHTS_PATH_READLINK=1<<15;const RIGHTS_PATH_RENAME_SOURCE=1<<16;const RIGHTS_PATH_RENAME_TARGET=1<<17;const RIGHTS_PATH_FILESTAT_GET=1<<18;const RIGHTS_PATH_FILESTAT_SET_SIZE=1<<19;const RIGHTS_PATH_FILESTAT_SET_TIMES=1<<20;const RIGHTS_FD_FILESTAT_GET=1<<21;const RIGHTS_FD_FILESTAT_SET_SIZE=1<<22;const RIGHTS_FD_FILESTAT_SET_TIMES=1<<23;const RIGHTS_PATH_SYMLINK=1<<24;const RIGHTS_PATH_REMOVE_DIRECTORY=1<<25;const RIGHTS_PATH_UNLINK_FILE=1<<26;const RIGHTS_POLL_FD_READWRITE=1<<27;const RIGHTS_SOCK_SHUTDOWN=1<<28;class Iovec{static read_bytes(view,ptr){const iovec=new Iovec;iovec.buf=view.getUint32(ptr,true);iovec.buf_len=view.getUint32(ptr+4,true);return iovec}static read_bytes_array(view,ptr,len){const iovecs=[];for(let i=0;i<len;i++){iovecs.push(Iovec.read_bytes(view,ptr+8*i))}return iovecs}}class Ciovec{static read_bytes(view,ptr){const iovec=new Ciovec;iovec.buf=view.getUint32(ptr,true);iovec.buf_len=view.getUint32(ptr+4,true);return iovec}static read_bytes_array(view,ptr,len){const iovecs=[];for(let i=0;i<len;i++){iovecs.push(Ciovec.read_bytes(view,ptr+8*i))}return iovecs}}const WHENCE_SET=0;const WHENCE_CUR=1;const WHENCE_END=2;const FILETYPE_UNKNOWN=0;const FILETYPE_BLOCK_DEVICE=1;const FILETYPE_CHARACTER_DEVICE=2;const FILETYPE_DIRECTORY=3;const FILETYPE_REGULAR_FILE=4;const FILETYPE_SOCKET_DGRAM=5;const FILETYPE_SOCKET_STREAM=6;const FILETYPE_SYMBOLIC_LINK=7;class Dirent{head_length(){return 24}name_length(){return this.dir_name.byteLength}write_head_bytes(view,ptr){view.setBigUint64(ptr,this.d_next,true);view.setBigUint64(ptr+8,this.d_ino,true);view.setUint32(ptr+16,this.dir_name.length,true);view.setUint8(ptr+20,this.d_type)}write_name_bytes(view8,ptr,buf_len){view8.set(this.dir_name.slice(0,Math.min(this.dir_name.byteLength,buf_len)),ptr)}constructor(next_cookie,name,type){this.d_ino=1n;const encoded_name=new TextEncoder().encode(name);this.d_next=next_cookie;this.d_namlen=encoded_name.byteLength;this.d_type=type;this.dir_name=encoded_name}}const ADVICE_NORMAL=0;const ADVICE_SEQUENTIAL=1;const ADVICE_RANDOM=2;const ADVICE_WILLNEED=3;const ADVICE_DONTNEED=4;const ADVICE_NOREUSE=5;const FDFLAGS_APPEND=1<<0;const FDFLAGS_DSYNC=1<<1;const FDFLAGS_NONBLOCK=1<<2;const FDFLAGS_RSYNC=1<<3;const FDFLAGS_SYNC=1<<4;class Fdstat{write_bytes(view,ptr){view.setUint8(ptr,this.fs_filetype);view.setUint16(ptr+2,this.fs_flags,true);view.setBigUint64(ptr+8,this.fs_rights_base,true);view.setBigUint64(ptr+16,this.fs_rights_inherited,true)}constructor(filetype,flags){this.fs_rights_base=0n;this.fs_rights_inherited=0n;this.fs_filetype=filetype;this.fs_flags=flags}}const FSTFLAGS_ATIM=1<<0;const FSTFLAGS_ATIM_NOW=1<<1;const FSTFLAGS_MTIM=1<<2;const FSTFLAGS_MTIM_NOW=1<<3;const OFLAGS_CREAT=1<<0;const OFLAGS_DIRECTORY=1<<1;const OFLAGS_EXCL=1<<2;const OFLAGS_TRUNC=1<<3;class Filestat{write_bytes(view,ptr){view.setBigUint64(ptr,this.dev,true);view.setBigUint64(ptr+8,this.ino,true);view.setUint8(ptr+16,this.filetype);view.setBigUint64(ptr+24,this.nlink,true);view.setBigUint64(ptr+32,this.size,true);view.setBigUint64(ptr+38,this.atim,true);view.setBigUint64(ptr+46,this.mtim,true);view.setBigUint64(ptr+52,this.ctim,true)}constructor(filetype,size){this.dev=0n;this.ino=0n;this.nlink=0n;this.atim=0n;this.mtim=0n;this.ctim=0n;this.filetype=filetype;this.size=size}}const EVENTTYPE_CLOCK=0;const EVENTTYPE_FD_READ=1;const EVENTTYPE_FD_WRITE=2;const EVENTRWFLAGS_FD_READWRITE_HANGUP=1<<0;const SUBCLOCKFLAGS_SUBSCRIPTION_CLOCK_ABSTIME=1<<0;const SIGNAL_NONE=0;const SIGNAL_HUP=1;const SIGNAL_INT=2;const SIGNAL_QUIT=3;const SIGNAL_ILL=4;const SIGNAL_TRAP=5;const SIGNAL_ABRT=6;const SIGNAL_BUS=7;const SIGNAL_FPE=8;const SIGNAL_KILL=9;const SIGNAL_USR1=10;const SIGNAL_SEGV=11;const SIGNAL_USR2=12;const SIGNAL_PIPE=13;const SIGNAL_ALRM=14;const SIGNAL_TERM=15;const SIGNAL_CHLD=16;const SIGNAL_CONT=17;const SIGNAL_STOP=18;const SIGNAL_TSTP=19;const SIGNAL_TTIN=20;const SIGNAL_TTOU=21;const SIGNAL_URG=22;const SIGNAL_XCPU=23;const SIGNAL_XFSZ=24;const SIGNAL_VTALRM=25;const SIGNAL_PROF=26;const SIGNAL_WINCH=27;const SIGNAL_POLL=28;const SIGNAL_PWR=29;const SIGNAL_SYS=30;const RIFLAGS_RECV_PEEK=1<<0;const RIFLAGS_RECV_WAITALL=1<<1;const ROFLAGS_RECV_DATA_TRUNCATED=1<<0;const SDFLAGS_RD=1<<0;const SDFLAGS_WR=1<<1;const PREOPENTYPE_DIR=0;class PrestatDir{write_bytes(view,ptr){view.setUint32(ptr,this.pr_name_len,true)}constructor(name_len){this.pr_name_len=name_len}}class Prestat{static dir(name_len){const prestat=new Prestat;prestat.tag=PREOPENTYPE_DIR;prestat.inner=new PrestatDir(name_len);return prestat}write_bytes(view,ptr){view.setUint32(ptr,this.tag,true);this.inner.write_bytes(view,ptr+4)}}\n\n//# sourceURL=webpack://Stack/./node_modules/@bjorn3/browser_wasi_shim/dist/wasi_defs.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./stack-worker.js");
/******/ 	Stack = __webpack_exports__;
/******/ 	
/******/ })()
;